apiVersion: v1
kind: Service
metadata:
  name: nimbus-headless
  labels:
    app: nimbus-headless
spec:
  ports:
  - port: 6627
    name: nimbus-client
  clusterIP: None
  selector:
    app: nimbus
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: nimbus
spec:
  serviceName: nimbus-headless
  replicas: 2
  template:
    metadata:
      labels:
        app: nimbus
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - nimbus
              topologyKey: "kubernetes.io/hostname"
      containers:
      - name: k8snimbus
        imagePullPolicy: Always
        image: elliswu/storm-base:1.1.1
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
        ports:
        - containerPort: 6627
          name: nimbus-client
        - containerPort: 8080
          name: ui
        env:
        - name : STORM_ZOOKEEPER
          value: "zookeeper"
        - name: NIMBUS_SEEDS
          value: "nimbus-0.nimbus-headless.default.svc.cluster.local nimbus-1.nimbus-headless.default.svc.cluster.local"
        - name: STORM_SUPERVISOR_SLOTS_PORTS
          value: "6700 6701 6702 6703"
        - name: STORM_ROLE
          value: "nimbus ui"
        - name: STORM_LOCAL_DIR
          value: "/tmp"
        - name: STORM_LOG_DIR
          value: "/var/lib/storm/logs"
        command:
        - sh
        - -c
        - /opt/storm/bin/run_storm.sh
        volumeMounts:
        - name: storm-logs
          mountPath: /var/lib/storm/logs
  volumeClaimTemplates:
  - metadata:
      name: storm-logs
    spec:
      storageClassName: rbd
      resources:
        requests:
          storage: 10Gi
      accessModes: [ "ReadWriteOnce" ]
